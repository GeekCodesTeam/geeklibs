//noinspection DuplicatePlatformClasses
apply plugin: 'com.android.application'
def config = rootProject.ext //
def library = rootProject.ext.dependencies //
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dexOptions {
        jumboMode = true
    }

//    aaptOptions {
//        cruncherEnabled = false
//        useNewCruncher = false
//    }

//    packagingOptions {
//        exclude 'META-INF/rxjava.properties'
//    }

    packagingOptions {
        pickFirst 'lib/armeabi/libRSSupport.so'
        pickFirst 'lib/armeabi/librsjni_androidx.so'
        pickFirst 'lib/armeabi/librsjni.so'
        pickFirst 'lib/armeabi-v7a/libRSSupport.so'
        pickFirst 'lib/armeabi-v7a/librsjni_androidx.so'
        pickFirst 'lib/armeabi-v7a/librsjni.so'
        pickFirst 'lib/arm64-v8a/librsjni.so'
        pickFirst 'lib/arm64-v8a/libRSSupport.so'
        pickFirst 'lib/arm64-v8a/librsjni_androidx.so'
        pickFirst 'lib/x86_64/libRSSupport.so'
        pickFirst 'lib/x86_64/librsjni_androidx.so'
        pickFirst 'lib/x86_64/librsjni.so'
        pickFirst 'lib/x86/librsjni_androidx.so'
        pickFirst 'lib/x86/libRSSupport.so'
        pickFirst 'lib/x86/librsjni.so'

    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
//    ndkVersion "major.minor.build" // e.g.,  ndkVersion '21.3.6528147'
    ndkVersion "22.1.7171670" // e.g.,  ndkVersion '21.3.6528147'
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        applicationId "com.fosung.lighthouse.test"
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.appversionCode
        versionName config.appversionName
        multiDexEnabled true
        renderscriptTargetApi 30
        renderscriptSupportModeEnabled true
        //javaCompileOptions
//        javaCompileOptions {
//            annotationProcessorOptions {
//                includeCompileClasspath = true
//            }
//        }
        // Cmake
        externalNativeBuild {
            cmake {
                version "3.18.1"
                // 指定一些编译选项
                cppFlags "-std=c++11 -frtti -fexceptions"
                // 也可以使用下面这种语法向变量传递参数：
                // arguments "-D变量名=参数".
                arguments "-DANDROID_ARM_NEON=TRUE",
                        // 使用下面这种语法向变量传递多个参数（参数之间使用空格隔开）：
                        // arguments "-D变量名=参数1 参数2"
                        "-DANDROID_CPP_FEATURES=rtti exceptions"
                // 指定ABI
                abiFilters /*"armeabi-v7a" ,*/ "arm64-v8a"
            }
        }

        ndk {
            abiFilters /*'armeabi', */ /*'armeabi-v7a',*/ 'arm64-v8a'
//            abiFilters 'armeabi-v7a'
        }

//        sourceSets.main {
//            jni.srcDirs = []
//            //LOCAL_LDFLAGS += -fuse-ld=bfd
//            //jni.srcDirs 'src/main/jni'
//            jniLibs.srcDir './../../other jar'
////            jniLibs.srcDir(['libs', './../../other jar'])
////            jniLibs.srcDir(['libs'])
////            jniLibs.srcDirs = ['src/main/jni', './../../other jar']
//        }

//        sourceSets {
//            main {
//                jniLibs.srcDirs = ['libs']
//            }
//        }
    }
    // CMakeLists.txt
    externalNativeBuild {
        cmake {
//            path "CMakeLists.txt"  //
            path "src/main/cpp/CMakeLists.txt"
            version "3.18.1"
        }
    }
    flavorDimensions "keep"
    productFlavors {
        bxn_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.test"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.test",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.test",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "Android框架-线上",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
        bxnt_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.test1"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.test1",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.test1",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "Android框架-测试",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
        bxny_nation {
            dimension "keep"
            applicationId "com.fosung.lighthouse.test2"
            manifestPlaceholders = [
                    JSHARE_PKGNAME: "com.fosung.lighthouse.test2",
                    JPUSH_PKGNAME : "com.fosung.lighthouse.test2",
                    JPUSH_APPKEY  : "b5333edf8469ecdec9d3ad73", //JPush 上注册的包名对应的 key.
                    JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
                    // 设置manifest.xml中的变量
                    XIAOMI_APPKEY : "MI-5871985930878", // 小米平台注册的key,注意不要将前缀去掉 MI-key
                    XIAOMI_APPID  : "MI-2882303761519859878", // 小米平台注册的id，注意不要将前缀去掉 MI-id
                    TENCENT_APPID : "1106011004",
                    MTA_APPKEY    : "注册应用的appkey",
                    MTA_CHANNEL   : "渠道名称",
                    app_name      : "Android框架-预生产",
                    app_icon      : "@mipmap/ic_launcher"
            ]
        }
    }
    android.applicationVariants.all { variant ->
        def outputApkName = "yewulibs-demo1-app-${variant.flavorName}-release.apk"
        variant.outputs.all {
            outputFileName = outputApkName
        }
    }
    signingConfigs {
//        release {
//            storeFile file('./firebox_keystore.jks')
//            keyAlias 'haier'
//            keyPassword 'android'
//            storePassword 'android'
//        }
//        debug {
//            storeFile file('./firebox_keystore.jks')
//            keyAlias 'haier'
//            keyPassword 'android'
//            storePassword 'android'
//        }
        //TODO harmonybufen
        release {
            storeFile file('./../../releasekey/harmonyandroid.jks')
            keyAlias 'harmonyandroid'
            keyPassword 'HarmonyAndroid'
            storePassword 'HarmonyAndroid'
        }
        debug {
            storeFile file('./../../releasekey/harmonyandroid.jks')
            keyAlias 'harmonyandroid'
            keyPassword 'HarmonyAndroid'
            storePassword 'HarmonyAndroid'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
//            zipAlignEnabled false
//            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':commonlibs:common:libbase')
    // TODO common库
    implementation project(':commonlibs:baselibrary')
    implementation project(':yewulibs1:yewulibs1-appcomm')
    // TODO 业务
    implementation project(':yewulibs1:yewulibs1-appindex')
    implementation project(':yewulibs1:yewulibs1-appsplash')
    implementation project(':yewulibs1:yewulibs1-applogin')
    implementation project(':yewulibs1:yewulibs1-appsearch')
    // TODO 接口

}

// TODO Wallet打包
apply from: './multiple-channel.gradle'
// TODO mob
apply from: './../../commonlibs/hunheku/libappmob/MobSDK.gradle'
